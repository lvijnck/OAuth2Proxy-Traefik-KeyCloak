version: "3.7"

services:

  traefik:
    image: traefik:v3.0
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--log.level=DEBUG"
      - "--accesslog.filepath=/log/access.log"
      - "--accesslog.format=json"
      - "--accesslog.fields.defaultmode=keep"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    networks:
      web:
        aliases:
          # these aliases are hacks so we can route the *.localhost domains from inside the containers:
          - keycloak.test.localhost
          - oauth.test.localhost
          - landing.test.localhost
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./log:/log

  oauth2-proxy:
    image: bitnami/oauth2-proxy:7.4.0
    container_name: oauth2-proxy1
    command:
      - --http-address
      - 0.0.0.0:4180
    environment:
      OAUTH2_PROXY_UPSTREAMS: static://202
      OAUTH2_PROXY_PROVIDER_DISPLAY_NAME: Keycloak
      OAUTH2_PROXY_PROVIDER: keycloak-oidc 
      OAUTH2_PROXY_OIDC_ISSUER_URL: http://keycloak.test.localhost/auth/realms/Test1
      OAUTH2_PROXY_CLIENT_ID: nginx
      OAUTH2_PROXY_CLIENT_SECRET: xzwfZ9vzJBFntl0jiESPJGvRBj6UPpxT
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: 'true'
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: 'true'
      OAUTH2_PROXY_EMAIL_DOMAINS: '*'
      OAUTH2_PROXY_REDIRECT_URL: http://oauth.test.localhost/oauth2/callback
      OAUTH2_PROXY_COOKIE_SECRET: cYW8ox+3ySQZ5M+92hsZhnUqiQqM5U7B
      OAUTH2_PROXY_SKIP_OIDC_DISCOVERY: 'true'
      OAUTH2_PROXY_COOKIE_SECURE: 'false'
      OAUTH2_PROXY_COOKIE_DOMAINS: '.test.localhost'
      OAUTH2_PROXY_SET_AUTHORIZATION_HEADER: 'true'
      OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: 'true'
      OAUTH2_PROXY_LOGIN_URL: http://keycloak.test.localhost/auth/realms/Test1/protocol/openid-connect/auth
      OAUTH2_PROXY_REDEEM_URL: http://keycloak.test.localhost/auth/realms/Test1/protocol/openid-connect/token
      OAUTH2_PROXY_OIDC_JWKS_URL: http://keycloak.test.localhost/auth/realms/Test1/protocol/openid-connect/certs
      OAUTH2_PROXY_COOKIE_CSRF_PER_REQUEST: 'true'
      OAUTH2_PROXY_WHITELIST_DOMAINS: '.test.localhost'
      OAUTH2_PROXY_SET_XAUTHREQUEST: 'true'
      OAUTH2_PROXY_REVERSE_PROXY: 'true'
      OAUTH2_PROXY_SKIP_AUTH_STRIP_HEADERS: 'false'
      OAUTH2_PROXY_SCOPE: "profile openid email"
    labels:
      # Default Traefik routing for service
      - "traefik.enable=true"
      - "traefik.environment=localhost"
      - "traefik.http.services.forwardauth.loadbalancer.server.port=4180"
      - "traefik.http.routers.forwardauth.rule=Host(`oauth.test.localhost`)"
    ports:
      - 4180:4180
    depends_on:
      - keycloak
    networks:
      web:
        aliases:
          # these aliases are hacks so we can route the *.localhost domains from inside the containers:
          - keycloak.test.localhost
          - oauth.test.localhost
          - landing.test.localhost

  keycloak:
    image: jboss/keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin123
      KEYCLOAK_IMPORT: /tmp/realm-export.json
    labels:
      # NOTE: Avoids baking in test config in prod config
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.test.localhost`)"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    volumes:
      - "./keycloak/initial.json:/tmp/realm-export.json"
    ports:
      - "8024:8080"
    networks:
      - web

  landing:
    image: mendhak/http-https-echo
    labels:
      - "traefik.enable=true"
      - "traefik.environment=localhost"
      - "traefik.http.services.landing.loadbalancer.server.port=8082"
      - "traefik.http.routers.landing.rule=Host(`landing.test.localhost`)"
      # Setup Middleware
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://oauth2-proxy:4180"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=Authorization,X-Auth-Request-Email"
      - "traefik.http.routers.landing.middlewares=traefik-forward-auth"
    environment:
      - HTTP_PORT=8082
    ports:
      # Expose HTTP port
      - "8082:8082"
    networks:
      - web

networks:
  web:

       